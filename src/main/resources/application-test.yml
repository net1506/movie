spring:
  server:
    port: 8080
  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb # H2 DB 연결 주소 (In-Memory Mode)
    username: sa # H2 DB 접속 ID (사용자 지정)
    password:  # H2 DB 접속 PW (사용자 지정)
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        naming:
          physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        show_sql: false # SQL 쿼리 출력 여부
        format_sql: false # SQL 쿼리 포맷팅 여부
  data:
    redis:
      host: localhost
      port: 6379
  cache:
    type: redis
  kafka:
    template:
      default-topic: my-topic
    bootstrap-servers: 127.0.0.1:10000,127.0.0.1:10001,127.0.0.1:10002
    properties:
      retry.backoff.ms: 5000
      request.timeout.ms: 30000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: my-group #  Kafka Consumer 그룹 ID (같은 그룹이면 같은 메시지를 공유)
      enable-auto-commit: false
      auto-offset-reset: latest # 메시지 소비 시작 위치 설정 (가장 오래된 메시지부터 처리)
      properties:
        max.poll.interval.ms: 600000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

queue:
  waiting-key: ${QUEUE_WAITING_KEY:waiting}
  active-key: ${QUEUE_ACTIVE_KEY:active}

logging:
  level:
    org.hibernate.SQL: DEBUG  # 실행되는 SQL 로그 출력
    org.hibernate.orm.jdbc.bind: TRACE  # SQL 바인딩된 파라미터 값 출력
